package DomainModel;

import java.util.ArrayList;
import javax.persistence.Entity;
import Given.MfDate;
import Given.Money;

@Entity
public class Contract{
	
	private Long id;
	private Product product;
	private Money revenue;
	private MfDate whenSigned;
	private ArrayList<RevenueRecognition> revenueRecognitions = new ArrayList<RevenueRecognition>();
	private static ArrayList<Contract> contracts = new ArrayList<Contract>();
	
	//To maintain the default constructor
	public Contract(){
		
	}
	
	public Contract(Product product, Money revenue, MfDate whenSigned) {
	      this.product = product;
	      this.revenue = revenue;
	      this.whenSigned = whenSigned;
	}
	
	public void addContract(){
		contracts.add(this);
	}
	
	public void calculateRecognitions() {
		product.calculateRevenueRecognitions(this);
	}
	
	public void addRevenueRecognition(RevenueRecognition revenueRecognition){
		revenueRecognitions.add(revenueRecognition);
	}
	
	public Money getRevenue(){
		return this.revenue;
	}
	
	public MfDate getWhenSigned(){
		return this.whenSigned;
	}
	
	public Money recognizedRevenue(MfDate asOf) {
	      Money result = Money.dollars(0);
	      for ( RevenueRecognition r : revenueRecognitions )
	         if (r.isRecognizableBy(asOf))
	            result = result.add(r.getAmount());
	      return result;
	}
}
